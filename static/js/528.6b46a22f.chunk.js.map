{"version":3,"file":"static/js/528.6b46a22f.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://samurai-way/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__lB-pf\",\"posts\":\"MyPosts_posts__GSiZ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\"};","import s from \"./Post.module.css\";\n\ntype PostProps = {\n  message: string;\n  likesCount: number;\n};\n\nconst Post = (props: PostProps) => {\n  return (\n    <div className={s.item}>\n      <img\n        src=\"https://upload.wikimedia.org/wikipedia/ru/c/ce/Aang.png\"\n        alt=\"\"\n      />\n      {props.message}\n      <div>\n        <span>{props.likesCount} like</span>\n      </div>\n    </div>\n  );\n};\nexport default Post;\n","import { createRef } from \"react\";\n// import { PostType } from \"../../../redux/store\";\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport { PostType } from \"../../../redux/profile-reducer\";\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../../../utils/validators\";\nimport { Textarea } from \"../../common/FormControls/FormControl\";\n\ntype MyPostsProps = {\n  posts: PostType[];\n  addPost: (newPostBody: string) => void;\n  // updateNewPostText: (text: string) => void;\n  // newPostText: string;\n};\n\ntype FormDataType = {\n  newPostBody: string;\n};\n\nconst MyPosts = (props: MyPostsProps) => {\n  let postsElements = props.posts.map((post) => (\n    <Post key={post.id} message={post.message} likesCount={post.likesCount} />\n  ));\n\n  // const newPostElement = createRef<HTMLTextAreaElement>();\n\n  // const addPost = () => {\n  //   // props.dispatch(addPostAC());\n  //   props.addPost();\n  // };\n\n  // const onPostChange = () => {\n  //   if (newPostElement.current) {\n  //     props.updateNewPostText(newPostElement.current.value);\n  //     // props.dispatch(updateNewPostTextAC(newPostElement.current.value));\n  //   }\n  // };\n\n  const addNewPost = (values: FormDataType) => {\n    // alert(values.newPostBody);\n    props.addPost(values.newPostBody);\n  };\n\n  return (\n    <div className={s.postsBlock}>\n      <h3>My posts</h3>\n      <AddPostFormRedux onSubmit={addNewPost} />\n\n      <div className={s.posts}>{postsElements}</div>\n    </div>\n  );\n};\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddPostForm = (props: InjectedFormProps<FormDataType>) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component={Textarea}\n          name=\"newPostBody\"\n          placeholder=\"Add your post...\"\n          validate={[required, maxLength10]}\n        />\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddPostFormRedux = reduxForm<FormDataType>({ form: \"addPostForm\" })(\n  AddPostForm\n);\n\nexport default MyPosts;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport {\n  PostType,\n  ProfileActionsType,\n  addPostAC,\n  // updateNewPostTextAC,\n} from \"../../../redux/profile-reducer\";\nimport { AppRootState } from \"../../../redux/redux-store\";\n// import { ActionsType } from \"../../../redux/store\";\nimport MyPosts from \"./MyPosts\";\n\ntype MyPostsContainerProps = {};\n\ntype MapStateProps = {\n  posts: PostType[];\n  // newPostText: string;\n};\n\ntype MapDispatchProps = {\n  addPost: (newPostBody: string) => void;\n  // updateNewPostText: (text: string) => void;\n};\n\nconst mapStateToProps = (state: AppRootState): MapStateProps => {\n  return {\n    posts: state.profilePage.posts,\n    // newPostText: state.profilePage.newPostText,\n  };\n};\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch<ProfileActionsType>\n): MapDispatchProps => {\n  return {\n    addPost: (newPostBody: string) => dispatch(addPostAC(newPostBody)),\n    // updateNewPostText: (text: string) => dispatch(updateNewPostTextAC(text)),\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\"};","import { ChangeEvent, Component, useEffect, useState } from \"react\";\n\ntype ProfileStatusProps = {\n  status: string;\n  updateStatus: (status: string) => void;\n};\n\ntype ProfileStatusState = {\n  editMode: boolean;\n  status: string;\n};\n\nconst ProfileStatusWithHooks = (props: ProfileStatusProps) => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deActivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const handleChangeStatus = (event: ChangeEvent<HTMLInputElement>) => {\n    setStatus(event.currentTarget.value);\n  };\n\n  return (\n    <div>\n      {editMode && (\n        <div>\n          <input\n            autoFocus\n            type=\"text\"\n            value={status}\n            onBlur={deActivateEditMode}\n            onChange={handleChangeStatus}\n          />\n        </div>\n      )}\n      {!editMode && (\n        <div>\n          <span onDoubleClick={activateEditMode}>\n            {props.status || \"---------\"}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default ProfileStatusWithHooks;\n","import { ProfileModel } from \"../../../api/api\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport s from \"./ProfileInfo.module.css\";\nimport userImage from \"../../../assets/images/image.jpeg\";\nimport ProfileStatus from \"./ProfileStatus\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\ntype ProfileInfoProps = {\n  profile: ProfileModel;\n  isAuth: boolean;\n  status: string;\n  updateStatus: (status: string) => void;\n};\n\nconst ProfileInfo = (props: ProfileInfoProps) => {\n  if (!props.profile) {\n    return <Preloader />;\n  }\n\n  return (\n    <div>\n      {/* <div>\n        <img\n          src=\"https://cc-prod.scene7.com/is/image/CCProdAuthor/t-03-4?$pjpeg$&jpegSize=200&wid=720\"\n          alt=\"\"\n        />\n      </div> */}\n      <div className={s.descriptionBlock}>\n        <img\n          width={100}\n          src={\n            props.profile.photos.small || props.profile.photos.large\n              ? props.profile.photos.small || props.profile.photos.large\n              : userImage\n          }\n          alt={props.profile.fullName}\n        />\n        <ProfileStatusWithHooks\n          status={props.status}\n          updateStatus={props.updateStatus}\n        />\n      </div>\n    </div>\n  );\n};\nexport default ProfileInfo;\n","import { ProfileModel } from \"../../api/api\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\ntype ProfileProps = {\n  profile: ProfileModel;\n  isAuth: boolean;\n  status: string;\n  updateStatus: (status: string) => void;\n};\n\nconst Profile = (props: ProfileProps) => {\n  return (\n    <div>\n      <ProfileInfo\n        profile={props.profile}\n        isAuth={props.isAuth}\n        status={props.status}\n        updateStatus={props.updateStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\nexport default Profile;\n","import React, { ComponentType } from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { ProfileModel } from \"../../api/api\";\nimport {\n  getUserProfileTC,\n  getUserStatusTC,\n  updateStatusTC,\n} from \"../../redux/profile-reducer\";\nimport { AppRootState } from \"../../redux/redux-store\";\nimport Profile from \"./Profile\";\n\ntype MapStateProps = {\n  profile: ProfileModel;\n  status: string;\n  authorizedUserId: number | null;\n  isAuth: boolean;\n};\n\ntype PathParamsType = {\n  userId: string;\n};\n\ntype ProfileContainerProps = RouteComponentProps<PathParamsType> & {\n  profile: ProfileModel;\n  status: string;\n  isAuth: boolean;\n  authorizedUserId: number | null;\n  getUserProfileTC: (id: string) => void;\n  getUserStatusTC: (id: string) => void;\n  updateStatusTC: (status: string) => void;\n};\nclass ProfileContainer extends React.Component<ProfileContainerProps> {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      // userId = \"31109\";\n      userId = String(this.props.authorizedUserId);\n      if(!userId) {\n        this.props.history.push('/login')\n      }\n    }\n\n    this.props.getUserProfileTC(userId);\n    this.props.getUserStatusTC(userId);\n  }\n\n  render() {\n    // if (!this.props.isAuth) {\n    //   return <Redirect to=\"/login\" />;\n    // }\n\n    return (\n      <Profile\n        {...this.props}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatusTC}\n      />\n    );\n  }\n}\n\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n// (props: any) => {\n//   if (!props.isAuth) {\n//     return <Redirect to=\"/login\" />;\n//   }\n\n//   return <ProfileContainer {...props}/>\n// }\n\n// const mapStateToPropsForRedirect = (state: AppRootState) => {\n//   return {\n//     isAuth: state.auth.isAuth,\n//   };\n// };\n\n// // @ts-ignore\n// AuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent)\n\nconst mapStateToProps = (state: AppRootState): MapStateProps => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.id,\n    isAuth: state.auth.isAuth,\n  };\n};\n\n// const WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\n\n// export default connect(mapStateToProps, { getUserProfileTC })(\n//   WithUrlDataContainerComponent\n// );\n\nexport default compose<ComponentType>(\n  connect(mapStateToProps, {\n    getUserProfileTC,\n    getUserStatusTC,\n    updateStatusTC,\n  }),\n  withRouter\n  // withAuthRedirect\n)(ProfileContainer);\n"],"names":["props","className","s","src","alt","message","likesCount","maxLength10","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","postsElements","posts","map","post","id","values","addPost","newPostBody","connect","state","profilePage","dispatch","addPostAC","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","type","value","onBlur","updateStatus","onChange","event","currentTarget","onDoubleClick","profile","width","photos","small","large","userImage","fullName","Preloader","isAuth","ProfileContainer","userId","this","match","params","String","authorizedUserId","history","push","getUserProfileTC","getUserStatusTC","updateStatusTC","React","compose","auth","withRouter"],"sourceRoot":""}